{"ast":null,"code":"import{React,useState,useCallback}from'react';import Playlist from\"../../src/components/Playlist.js\";import SearchResults from\"../../src/components/SearchResults.js\";import Spotify from\"../../src/components/requests.js\";import SearchBar from\"../../src/components/SearchBar.js\";import Sidebar from'./Sidebar.js';import\"../../src/index.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Jammming=()=>{const[searchResults,setSearchResults]=useState('');const[playlistName,setPlaylistName]=useState('Enter Playlist');const[playlistTracks,setPlaylistTracks]=useState(\"\");const search=useCallback(term=>{Spotify.search(term).then(setSearchResults);},[]);const addTrack=useCallback(track=>{if(playlistTracks.some(savedTrack=>savedTrack.id===track.id)){return;}setPlaylistName(prevTracks=>[...prevTracks,track]);},[playlistTracks]);const removeTrack=useCallback(track=>{if(playlistTracks.filter(currentTrack=>currentTrack.id!==track.id)){return;}},[playlistTracks]);const updatePlaylistName=useCallback(name=>{setPlaylistName(name);},[]);const savePlaylist=useCallback(()=>{const trackUris=playlistTracks&&playlistTracks.map(track=>track.uri);Spotify.savePlaylist(playlistName,trackUris).then(()=>{setPlaylistName(\"Enter Playlist\");setPlaylistTracks([]);});},[playlistName,playlistTracks]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Ja\",/*#__PURE__*/_jsx(\"span\",{children:\"mmm\"}),\"ing\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsx(SearchBar,{onSearch:search}),/*#__PURE__*/_jsxs(\"div\",{className:\"App-playlist\",children:[/*#__PURE__*/_jsx(SearchResults,{searchResults:searchResults,onAdd:addTrack}),/*#__PURE__*/_jsx(Playlist,{playlistName:playlistName,playlistTracks:playlistTracks,onNameChange:updatePlaylistName,onSave:savePlaylist,onRemove:removeTrack})]})]})]});};export default Jammming;","map":{"version":3,"names":["React","useState","useCallback","Playlist","SearchResults","Spotify","SearchBar","Sidebar","jsx","_jsx","jsxs","_jsxs","Jammming","searchResults","setSearchResults","playlistName","setPlaylistName","playlistTracks","setPlaylistTracks","search","term","then","addTrack","track","some","savedTrack","id","prevTracks","removeTrack","filter","currentTrack","updatePlaylistName","name","savePlaylist","trackUris","map","uri","children","className","onSearch","onAdd","onNameChange","onSave","onRemove"],"sources":["C:/Users/bobby/OneDrive/Documents/GitHub/SSSRankedChad.github.io/SSSRankedChad.github.io/projects/Jammming/src/components/Jammming.js"],"sourcesContent":["import {React, useState, useCallback} from 'react'\r\n\r\nimport Playlist from \"../../src/components/Playlist.js\"\r\nimport SearchResults from \"../../src/components/SearchResults.js\"\r\nimport Spotify from \"../../src/components/requests.js\"\r\nimport SearchBar from \"../../src/components/SearchBar.js\"\r\nimport Sidebar from './Sidebar.js'\r\n\r\nimport \"../../src/index.css\"\r\n\r\nconst Jammming = () => {\r\n    const [searchResults, setSearchResults] = useState('');\r\n    const [playlistName, setPlaylistName] = useState('Enter Playlist');\r\n    const [playlistTracks, setPlaylistTracks] = useState(\"\");\r\n\r\n    const search = useCallback((term) => {\r\n     Spotify.search(term).then(setSearchResults);\r\n    }, []);\r\n\r\n    const addTrack = useCallback((track) => {\r\n        if (playlistTracks.some((savedTrack)=> savedTrack.id === track.id)) {\r\n            return;\r\n        }\r\n\r\n        setPlaylistName((prevTracks) => [...prevTracks, track])\r\n    }, [playlistTracks]);\r\n\r\n    const removeTrack = useCallback((track) => {\r\n        if(playlistTracks.filter((currentTrack) => currentTrack.id !== track.id)) {\r\n          return;   \r\n        }\r\n    }, [playlistTracks])\r\n\r\n    const updatePlaylistName = useCallback((name) => {\r\n        setPlaylistName(name)\r\n    }, []);\r\n\r\n    const savePlaylist = useCallback(() => {\r\n        const trackUris = playlistTracks && playlistTracks.map((track) => track.uri);\r\n        Spotify.savePlaylist(playlistName, trackUris).then(() => {\r\n            setPlaylistName(\"Enter Playlist\");\r\n            setPlaylistTracks([]);\r\n        });\r\n    }, [playlistName, playlistTracks]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Ja<span>mmm</span>ing</h1>\r\n         <div className=\"App\">\r\n            <Sidebar />\r\n            <SearchBar onSearch={search} />\r\n         <div className=\"App-playlist\">\r\n            <SearchResults searchResults={searchResults} onAdd={addTrack} />\r\n            <Playlist\r\n              playlistName={playlistName}\r\n              playlistTracks={playlistTracks}\r\n              onNameChange={updatePlaylistName}\r\n              onSave={savePlaylist}\r\n              onRemove={removeTrack}\r\n            />\r\n         </div>\r\n         </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Jammming;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}