{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bobby\\\\OneDrive\\\\Documents\\\\GitHub\\\\SSSRankedChad.github.io\\\\SSSRankedChad.github.io\\\\projects\\\\Jammming\\\\src\\\\components\\\\Sidebar.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = () => {\n  const darkMode = () => {\n    let element = document.body;\n    element.classList.toggle(\"dark\");\n    let originalText = document.querySelector('#darkBtn');\n    if (originalText.innerHTML === \"Dark Mode\") {\n      originalText.innerHTML = \"Light Mode\";\n    } else {\n      originalText.innerHTML = \"Dark Mode\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://accounts.spotify.com/en/login\",\n        children: \" Login \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"darkBtn\",\n      onClick: darkMode,\n      children: \" Dark Mode \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Sidebar","darkMode","element","document","body","classList","toggle","originalText","querySelector","innerHTML","className","children","href","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bobby/OneDrive/Documents/GitHub/SSSRankedChad.github.io/SSSRankedChad.github.io/projects/Jammming/src/components/Sidebar.js"],"sourcesContent":["import React from 'react';  \r\n\r\nconst Sidebar = () => {\r\n\r\n    const darkMode = () => {\r\n        let element = document.body;\r\n        element.classList.toggle(\"dark\")\r\n        let originalText = document.querySelector('#darkBtn');\r\n        if(originalText.innerHTML === \"Dark Mode\") {\r\n          originalText.innerHTML = \"Light Mode\";\r\n        }\r\n        else {\r\n          originalText.innerHTML = \"Dark Mode\";\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div className=\"Sidebar\">\r\n        <button> <a href=\"https://accounts.spotify.com/en/login\"> Login </a></button>\r\n        <button id=\"darkBtn\" onClick={darkMode}> Dark Mode </button>\r\n        <button>Options</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAElB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACnB,IAAIC,OAAO,GAAGC,QAAQ,CAACC,IAAI;IAC3BF,OAAO,CAACG,SAAS,CAACC,MAAM,CAAC,MAAM,CAAC;IAChC,IAAIC,YAAY,GAAGJ,QAAQ,CAACK,aAAa,CAAC,UAAU,CAAC;IACrD,IAAGD,YAAY,CAACE,SAAS,KAAK,WAAW,EAAE;MACzCF,YAAY,CAACE,SAAS,GAAG,YAAY;IACvC,CAAC,MACI;MACHF,YAAY,CAACE,SAAS,GAAG,WAAW;IACtC;EACJ,CAAC;EAEH,oBACEV,OAAA;IAAKW,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACpBZ,OAAA;MAAAY,QAAA,GAAQ,GAAC,eAAAZ,OAAA;QAAGa,IAAI,EAAC,uCAAuC;QAAAD,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7EjB,OAAA;MAAQkB,EAAE,EAAC,SAAS;MAACC,OAAO,EAAEjB,QAAS;MAAAU,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5DjB,OAAA;MAAAY,QAAA,EAAQ;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV,CAAC;AAAAG,EAAA,GArBKnB,OAAO;AAuBb,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}